{"version":3,"sources":["app.js"],"names":["root","document","querySelector","newTodoField","itemList","allToggle","clearCompletedBtn","filter","updateInfo","complitedToglers","querySelectorAll","activeTogglers","counter","footer","toggleAllContainer","innerHTML","length","checked","hidden","hasTodos","addEventListener","closest","remove","togglers","toggler","classList","toggle","event","key","value","id","Date","insertAdjacentHTML","target","matches","dataset","filterButtons","button","toggleres","item"],"mappings":";AAAA,aAmGA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAjGA,IAAMA,EAAOC,SAASC,cAAc,YAC9BC,EAAeH,EAAKE,cAAc,aAClCE,EAAWJ,EAAKE,cAAc,cAC9BG,EAAYL,EAAKE,cAAc,eAC/BI,EAAoBN,EAAKE,cAAc,oBACvCK,EAASP,EAAKE,cAAc,YAIlC,SAASM,IACDC,IAAAA,EAAmBT,EAAKU,iBAAiB,mBACzCC,EAAiBX,EAAKU,iBAAiB,yBACvCE,EAAUZ,EAAKE,cAAc,eAC7BW,EAASb,EAAKE,cAAc,WAC5BY,EAAqBd,EAAKE,cAAc,yBAE9CU,EAAQG,UAAeJ,GAAAA,OAAAA,EAAeK,OAAtC,eACAX,EAAUY,QAAoC,IAA1BN,EAAeK,OAEnCV,EAAkBY,OAAqC,IAA5BT,EAAiBO,OAEtCG,IAAAA,EAAWV,EAAiBO,OAAS,GAAKL,EAAeK,OAAS,EAExEH,EAAOK,QAAUC,EACjBL,EAAmBI,QAAUC,EAjB/BX,IAoBAF,EAAkBc,iBAAiB,QAAS,WACpCX,IAD0C,EAG1BA,EAAAA,EAFGT,EAAKU,iBAAiB,oBADC,IAGR,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAA,EAAA,MAC9BW,QAAQ,cAAcC,UAJgB,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IAOhDd,MAGFH,EAAUe,iBAAiB,SAAU,WAC7BG,IADmC,EAGnBA,EAAAA,EAFLvB,EAAKU,iBAAiB,YADE,IAGT,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAArBc,IAAAA,EAAqB,EAAA,MAC9BA,EAAQP,QAAUZ,EAAUY,QAERO,EAAQH,QAAQ,cAExBI,UAAUC,OAAO,aAAcrB,EAAUY,UARd,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IAWzCT,MAGFL,EAAaiB,iBAAiB,UAAW,SAACO,GACpCA,GAAc,UAAdA,EAAMC,KAILzB,EAAa0B,MAAd,CAIEC,IAAAA,GAAM,IAAIC,KAEhB3B,EAAS4B,mBAAmB,YAEYF,2EAAAA,OAAAA,EACfA,gDAAAA,OAAAA,EAAO3B,MAAAA,OAAAA,EAAa0B,MAH7C,yEAQA1B,EAAa0B,MAAQ,GAErBrB,OAGFJ,EAASgB,iBAAiB,QAAS,SAACO,GAC7BA,EAAMM,OAAOC,QAAQ,cAI1BP,EAAMM,OAAOZ,QAAQ,cAAcC,SAEnCd,OAGFJ,EAASgB,iBAAiB,SAAU,SAACO,GAC9BA,EAAMM,OAAOC,QAAQ,aAINP,EAAMM,OAAOZ,QAAQ,cAE7BI,UAAUC,OAAO,YAAaC,EAAMM,OAAOhB,SAEvDT,OAGFD,EAAOa,iBAAiB,QAAS,SAACO,GAC5B,GAACA,EAAMM,OAAOE,QAAQ5B,OAAtB,CAIE6B,IALoC,EAOrBA,EAAAA,EAFCpC,EAAKU,iBAAiB,kBALF,IAON,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAzB2B,IAAAA,EAAyB,EAAA,MAClCA,EAAOZ,UAAUC,OAAO,WAAYC,EAAMM,SAAWI,IARb,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IAWpCC,IAXoC,EAapBA,EAAAA,EAFJtC,EAAKU,iBAAiB,YAXE,IAaT,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAtBc,IAAAA,EAAsB,EAAA,MACzBe,EAAOf,EAAQH,QAAQ,cAErBM,OAAAA,EAAMM,OAAOE,QAAQ5B,QACtB,IAAA,MACHgC,EAAKrB,QAAS,EACd,MAEG,IAAA,SACHqB,EAAKrB,OAASM,EAAQP,QACtB,MAEG,IAAA,YACHsB,EAAKrB,QAAUM,EAAQP,UA1Ba,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IA+B1CT","file":"app.d728176a.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst root = document.querySelector('.todoapp');\nconst newTodoField = root.querySelector('.new-todo');\nconst itemList = root.querySelector('.todo-list');\nconst allToggle = root.querySelector('.toggle-all');\nconst clearCompletedBtn = root.querySelector('.clear-completed');\nconst filter = root.querySelector('.filters');\n\nupdateInfo();\n\nfunction updateInfo() {\n  const complitedToglers = root.querySelectorAll('.toggle:checked');\n  const activeTogglers = root.querySelectorAll('.toggle:not(:checked)');\n  const counter = root.querySelector('.todo-count');\n  const footer = root.querySelector('.footer');\n  const toggleAllContainer = root.querySelector('.toggle-all-container');\n\n  counter.innerHTML = `${activeTogglers.length} items left`;\n  allToggle.checked = activeTogglers.length === 0;\n\n  clearCompletedBtn.hidden = complitedToglers.length === 0;\n\n  const hasTodos = complitedToglers.length > 0 || activeTogglers.length > 0;\n\n  footer.hidden = !hasTodos;\n  toggleAllContainer.hidden = !hasTodos;\n};\n\nclearCompletedBtn.addEventListener('click', () => {\n  const complitedToglers = root.querySelectorAll('.toggle:checked');\n\n  for (const toggler of complitedToglers) {\n    toggler.closest('.todo-item').remove();\n  };\n\n  updateInfo();\n});\n\nallToggle.addEventListener('change', () => {\n  const togglers = root.querySelectorAll('.toggle');\n\n  for (const toggler of togglers) {\n    toggler.checked = allToggle.checked;\n\n    const closestItem = toggler.closest('.todo-item');\n\n    closestItem.classList.toggle('.completed', allToggle.checked);\n  }\n\n  updateInfo();\n});\n\nnewTodoField.addEventListener('keydown', (event) => {\n  if (event.key !== 'Enter') {\n    return;\n  }\n\n  if (!newTodoField.value) {\n    return;\n  }\n\n  const id = +new Date();\n\n  itemList.insertAdjacentHTML('beforeend', `\n      <li class=\"todo-item\">\n        <input type=\"checkbox\" id=\"todo-${id}\" class=\"toggle\">\n        <label for=\"todo-${id}\">${newTodoField.value}</label>\n        <button class=\"destroy\"></button>\n      </li>\n  `);\n\n  newTodoField.value = '';\n\n  updateInfo();\n});\n\nitemList.addEventListener('click', (event) => {\n  if (!event.target.matches('.destroy')) {\n    return;\n  }\n\n  event.target.closest('.todo-item').remove();\n\n  updateInfo();\n});\n\nitemList.addEventListener('change', (event) => {\n  if (!event.target.matches('.toggle')) {\n    return;\n  }\n\n  const closestItem = event.target.closest('.todo-item');\n\n  closestItem.classList.toggle('completed', event.target.checked);\n\n  updateInfo();\n});\n\nfilter.addEventListener('click', (event) => {\n  if (!event.target.dataset.filter) {\n    return;\n  }\n\n  const filterButtons = root.querySelectorAll('[data-filter]');\n\n  for (const button of filterButtons) {\n    button.classList.toggle('selected', event.target === button);\n  }\n\n  const toggleres = root.querySelectorAll('.toggle');\n\n  for (const toggler of toggleres) {\n    const item = toggler.closest('.todo-item');\n\n    switch (event.target.dataset.filter) {\n      case 'all':\n        item.hidden = false;\n        break;\n\n      case 'active':\n        item.hidden = toggler.checked;\n        break;\n\n      case 'completed':\n        item.hidden = !toggler.checked;\n        break;\n    }\n  }\n\n  updateInfo();\n});\n"]}